<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CloudPics - Sign In</title>
    <link rel="stylesheet" href="/css/auth.css">
    <!-- Font Awesome for icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Background with animated gradient -->
    <div class="background">
        <div class="gradient-orb orb-1"></div>
        <div class="gradient-orb orb-2"></div>
        <div class="gradient-orb orb-3"></div>
    </div>

    <!-- Main authentication container -->
    <div class="auth-container">
        <!-- Left side - Branding and features -->
        <div class="auth-left">
            <!-- Brand logo and name -->
            <div class="brand-section">
                <div class="brand-logo">
                    <i class="fas fa-cloud"></i>
                    <span>CloudPics</span>
                </div>
                <p class="brand-tagline">Your images, everywhere you go</p>
            </div>

            <!-- Feature highlights -->
            <div class="features-section">
                <div class="feature-item">
                    <div class="feature-icon">
                        <i class="fas fa-cloud-upload-alt"></i>
                    </div>
                    <div class="feature-content">
                        <h3>Easy Upload</h3>
                        <p>Drag & drop your images or browse to upload instantly</p>
                    </div>
                </div>

                <div class="feature-item">
                    <div class="feature-icon">
                        <i class="fas fa-shield-alt"></i>
                    </div>
                    <div class="feature-content">
                        <h3>Secure Storage</h3>
                        <p>Your images are encrypted and stored safely in the cloud</p>
                    </div>
                </div>

                <div class="feature-item">
                    <div class="feature-icon">
                        <i class="fas fa-mobile-alt"></i>
                    </div>
                    <div class="feature-content">
                        <h3>Access Anywhere</h3>
                        <p>View and manage your images from any device, anytime</p>
                    </div>
                </div>
            </div>

            <!-- Testimonial or stats -->
            <div class="stats-section">
                <div class="stat-item">
                    <span class="stat-number">10M+</span>
                    <span class="stat-label">Images Stored</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number">500K+</span>
                    <span class="stat-label">Happy Users</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number">99.9%</span>
                    <span class="stat-label">Uptime</span>
                </div>
            </div>
        </div>

        <!-- Right side - Authentication forms -->
        <div class="auth-right">
            <!-- Dark mode toggle -->
            <button class="theme-toggle" id="themeToggle" onclick="toggleTheme()">
                <i class="fas fa-moon" id="themeIcon"></i>
            </button>

            <!-- Authentication card -->
            <div class="auth-card">
                <!-- Form toggle buttons -->
                <div class="form-toggle">
                    <button class="toggle-btn active" data-form="login" onclick="switchForm('login')">
                        Sign In
                    </button>
                    <button class="toggle-btn" data-form="signup" onclick="switchForm('signup')">
                        Sign Up
                    </button>
                </div>

                <!-- Login Form -->
                <form action="POST" class="auth-form" id="loginForm">
                    <div class="form-header">
                        <h2>Welcome Back!</h2>
                        <p>Sign in to access your cloud storage</p>
                    </div>

                    <!-- Google Sign In Button -->
                    <button type="button" class="google-btn" onclick="signInWithGoogle()">
                        <svg class="google-icon" viewBox="0 0 24 24">
                            <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                            <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                            <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                            <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                        </svg>
                        Continue with Google
                    </button>

                    <!-- Divider -->
                    <div class="divider">
                        <span>or</span>
                    </div>

                    <!-- Email input -->
                    <div class="input-group">
                        <label for="loginEmail">Email Address</label>
                        <div class="input-wrapper">
                            <i class="fas fa-envelope input-icon"></i>
                            <input type="email" id="loginEmail" name="email" placeholder="Enter your email" required>
                        </div>
                    </div>

                    <!-- Password input -->
                    <div class="input-group">
                        <label for="loginPassword">Password</label>
                        <div class="input-wrapper">
                            <i class="fas fa-lock input-icon"></i>
                            <input type="password" id="loginPassword" name="password" placeholder="Enter your password" required>
                            <button type="button" class="password-toggle" onclick="togglePassword('loginPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>

                    <!-- Remember me and forgot password -->
                    <div class="form-options">
                        <label class="checkbox-wrapper">
                            <input type="checkbox" id="rememberMe">
                            <span class="checkmark"></span>
                            Remember me
                        </label>
                        <a href="#" class="forgot-link" onclick="showForgotPassword()">Forgot Password?</a>
                    </div>

                    <!-- Submit button -->
                    <button type="submit" class="submit-btn">
                        <span class="btn-text">Sign In</span>
                        <i class="fas fa-arrow-right btn-icon"></i>
                    </button>
                </form>

                <!-- Sign Up Form -->
                <form action="POST" class="auth-form hidden" id="signupForm">
                    <div class="form-header">
                        <h2>Create Account</h2>
                        <p>Join thousands of users storing their images securely</p>
                    </div>

                    <!-- Google Sign Up Button -->
                    <button type="button" class="google-btn" onclick="signUpWithGoogle()">
                        <svg class="google-icon" viewBox="0 0 24 24">
                            <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                            <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                            <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                            <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                        </svg>
                        Sign up with Google
                    </button>

                    <!-- Divider -->
                    <div class="divider">
                        <span>or</span>
                    </div>

                    <!-- Name inputs -->
                    <div class="input-row">
                        <div class="input-group">
                            <label for="firstName">First Name</label>
                            <div class="input-wrapper">
                                <i class="fas fa-user input-icon"></i>
                                <input type="text" id="firstName" name="firstName" placeholder="First name" required>
                            </div>
                        </div>
                        <div class="input-group">
                            <label for="lastName">Last Name</label>
                            <div class="input-wrapper">
                                <i class="fas fa-user input-icon"></i>
                                <input type="text" id="lastName" name="lastName" placeholder="Last name" required>
                            </div>
                        </div>
                    </div>

                    <!-- Email input -->
                    <div class="input-group">
                        <label for="signupEmail">Email Address</label>
                        <div class="input-wrapper">
                            <i class="fas fa-envelope input-icon"></i>
                            <input type="email" id="signupEmail" name="email" placeholder="Enter your email" required>
                        </div>
                    </div>

                    <!-- Password input -->
                    <div class="input-group">
                        <label for="signupPassword">Password</label>
                        <div class="input-wrapper">
                            <i class="fas fa-lock input-icon"></i>
                            <input type="password" id="signupPassword" name="password" placeholder="Create a password" required>
                            <button type="button" class="password-toggle" onclick="togglePassword('signupPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <!-- Password strength indicator -->
                        <div class="password-strength">
                            <div class="strength-bar">
                                <div class="strength-fill" id="strengthFill"></div>
                            </div>
                            <span class="strength-text" id="strengthText">Password strength</span>
                        </div>
                    </div>

                    <!-- Confirm password input -->
                    <div class="input-group">
                        <label for="confirmPassword">Confirm Password</label>
                        <div class="input-wrapper">
                            <i class="fas fa-lock input-icon"></i>
                            <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm your password" required>
                            <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>

                    <!-- Terms and conditions -->
                    <div class="form-options">
                        <label class="checkbox-wrapper">
                            <input type="checkbox" id="agreeTerms" required>
                            <span class="checkmark"></span>
                            I agree to the Terms of Service and Privacy Policy</a>
                        </label>
                    </div>

                    <!-- Submit button -->
                    <button type="submit" class="submit-btn">
                        <span class="btn-text">Create Account</span>
                        <i class="fas fa-arrow-right btn-icon"></i>
                    </button>
                </form>
            </div>

            <!-- Footer links -->
            <div class="auth-footer">
                <p>&copy; 2024 CloudPics. All rights reserved.</p>
                <div class="footer-links">
                    <a href="#">Privacy Policy</a>
                    <a href="#">Terms of Service</a>
                    <a href="#">Support</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Forgot Password Modal -->
    <div class="modal-overlay" id="forgotModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Reset Password</h3>
                <button class="modal-close" onclick="closeForgotPassword()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <p>Enter your email address and we'll send you a link to reset your password.</p>
                <div class="input-group">
                    <label for="resetEmail">Email Address</label>
                    <div class="input-wrapper">
                        <i class="fas fa-envelope input-icon"></i>
                        <input type="email" id="resetEmail" placeholder="Enter your email">
                    </div>
                </div>
                <button class="submit-btn" onclick="sendResetEmail()">
                    Send Reset Link
                </button>
            </div>
        </div>
    </div>

    <!-- Loading overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner">
            <div class="spinner"></div>
            <p>Signing you in...</p>
        </div>
    </div>

    <!-- JavaScript -->
    <script>

        // Global variables
let isDarkMode = false
let currentForm = "login"

// Initialize the application
document.addEventListener("DOMContentLoaded", () => {
  initializeTheme()
  initializeFormValidation()
  initializePasswordStrength()

  // Add form submit listeners
  document.getElementById("loginForm").addEventListener("submit", handleLogin)
  document.getElementById("signupForm").addEventListener("submit", handleSignup)
})

// Theme management
function initializeTheme() {
  const savedTheme = localStorage.getItem("theme")
  if (savedTheme === "dark") {
    isDarkMode = true
    document.body.setAttribute("data-theme", "dark")
    document.getElementById("themeIcon").className = "fas fa-sun"
  }
}

function toggleTheme() {
  isDarkMode = !isDarkMode
  const body = document.body
  const themeIcon = document.getElementById("themeIcon")

  if (isDarkMode) {
    body.setAttribute("data-theme", "dark")
    themeIcon.className = "fas fa-sun"
    localStorage.setItem("theme", "dark")
  } else {
    body.removeAttribute("data-theme")
    themeIcon.className = "fas fa-moon"
    localStorage.setItem("theme", "light")
  }
}

// Form switching
function switchForm(formType) {
  const loginForm = document.getElementById("loginForm")
  const signupForm = document.getElementById("signupForm")
  const toggleBtns = document.querySelectorAll(".toggle-btn")

  // Update active button
  toggleBtns.forEach((btn) => btn.classList.remove("active"))
  document.querySelector(`[data-form="${formType}"]`).classList.add("active")

  // Switch forms
  if (formType === "login") {
    loginForm.classList.remove("hidden")
    signupForm.classList.add("hidden")
  } else {
    loginForm.classList.add("hidden")
    signupForm.classList.remove("hidden")
  }

  currentForm = formType
}

// Password visibility toggle
function togglePassword(inputId) {
  const input = document.getElementById(inputId)
  const button = input.parentElement.querySelector(".password-toggle i")

  if (input.type === "password") {
    input.type = "text"
    button.className = "fas fa-eye-slash"
  } else {
    input.type = "password"
    button.className = "fas fa-eye"
  }
}

// Password strength checker
function initializePasswordStrength() {
  const passwordInput = document.getElementById("signupPassword")
  const strengthFill = document.getElementById("strengthFill")
  const strengthText = document.getElementById("strengthText")

  if (passwordInput) {
    passwordInput.addEventListener("input", (e) => {
      const password = e.target.value
      const strength = calculatePasswordStrength(password)

      // Update strength bar
      strengthFill.className = `strength-fill ${strength.level}`
      strengthText.textContent = strength.text
    })
  }
}

function calculatePasswordStrength(password) {
  let score = 0
  const feedback = []

  // Length check
  if (password.length >= 8) score += 1
  else feedback.push("at least 8 characters")

  // Uppercase check
  if (/[A-Z]/.test(password)) score += 1
  else feedback.push("uppercase letter")

  // Lowercase check
  if (/[a-z]/.test(password)) score += 1
  else feedback.push("lowercase letter")

  // Number check
  if (/\d/.test(password)) score += 1
  else feedback.push("number")

  // Special character check
  if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) score += 1
  else feedback.push("special character")

  // Return strength level
  if (score === 0) return { level: "", text: "Password strength" }
  if (score <= 2) return { level: "weak", text: "Weak password" }
  if (score <= 3) return { level: "fair", text: "Fair password" }
  if (score <= 4) return { level: "good", text: "Good password" }
  return { level: "strong", text: "Strong password" }
}

// Form validation
function initializeFormValidation() {
  // Real-time validation for all inputs
  const inputs = document.querySelectorAll("input")
  inputs.forEach((input) => {
    input.addEventListener("blur", validateInput)
    input.addEventListener("input", clearValidation)
  })
}

function validateInput(e) {
  const input = e.target
  const wrapper = input.parentElement
  const value = input.value.trim()

  // Clear previous validation
  clearValidation(e)

  // Email validation
  if (input.type === "email" && value) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    if (!emailRegex.test(value)) {
      showInputError(wrapper, "Please enter a valid email address")
      return false
    }
  }

  // Password confirmation
  if (input.id === "confirmPassword" && value) {
    const password = document.getElementById("signupPassword").value
    if (value !== password) {
      showInputError(wrapper, "Passwords do not match")
      return false
    }
  }

  // Required field validation
  if (input.hasAttribute("required") && !value) {
    showInputError(wrapper, "This field is required")
    return false
  }

  // Show success state
  wrapper.classList.add("success")
  return true
}

function clearValidation(e) {
  const wrapper = e.target.parentElement
  wrapper.classList.remove("success", "error")

  // Remove error message
  const errorMsg = wrapper.parentElement.querySelector(".error-message")
  if (errorMsg) {
    errorMsg.remove()
  }
}

function showInputError(wrapper, message) {
  wrapper.classList.add("error")

  // Add error message
  const errorDiv = document.createElement("div")
  errorDiv.className = "error-message"
  errorDiv.textContent = message
  wrapper.parentElement.appendChild(errorDiv)
}

// Form submission handlers
async function handleLogin(e) {
  e.preventDefault()

  const formData = new FormData(e.target)
  const email = formData.get("email")
  const password = formData.get("password")
  const rememberMe = document.getElementById("rememberMe").checked

  // Validate form
  if (!validateForm(e.target)) {
    return
  }

  // Show loading
  showLoading("Signing you in...")

  try {
    // Simulate API call
    await simulateApiCall()

    // Store user session
    if (rememberMe) {
      localStorage.setItem("userEmail", email)
    }

    // Redirect to main app
    window.location.href = "index.html"
  } catch (error) {
    hideLoading()
    showNotification("Login failed. Please check your credentials.", "error")
  }
}

async function handleSignup(e) {
  e.preventDefault()

  const formData = new FormData(e.target)
  const firstName = formData.get("firstName")
  const lastName = formData.get("lastName")
  const email = formData.get("email")
  const password = formData.get("password")
  const confirmPassword = formData.get("confirmPassword")
  const agreeTerms = document.getElementById("agreeTerms").checked

  // Validate form
  if (!validateForm(e.target)) {
    return
  }

  // Check password match
  if (password !== confirmPassword) {
    showNotification("Passwords do not match", "error")
    return
  }

  // Check terms agreement
  if (!agreeTerms) {
    showNotification("Please agree to the Terms of Service", "error")
    return
  }

  // Show loading
  showLoading("Creating your account...")

  try {
    // Simulate API call
    await simulateApiCall()

    // Show success and switch to login
    hideLoading()
    showNotification("Account created successfully! Please sign in.", "success")
    switchForm("login")

    // Pre-fill email in login form
    document.getElementById("loginEmail").value = email
  } catch (error) {
    hideLoading()
    showNotification("Signup failed. Please try again.", "error")
  }
}

function validateForm(form) {
  const inputs = form.querySelectorAll("input[required]")
  let isValid = true

  inputs.forEach((input) => {
    const event = { target: input }
    if (!validateInput(event)) {
      isValid = false
    }
  })

  return isValid
}

// Google authentication
async function signInWithGoogle() {
  showLoading("Connecting to Google...")

  try {
    // Simulate Google OAuth
    await simulateApiCall()

    // Redirect to main app
    window.location.href = "index.html"
  } catch (error) {
    hideLoading()
    showNotification("Google sign-in failed. Please try again.", "error")
  }
}

async function signUpWithGoogle() {
  showLoading("Creating account with Google...")

  try {
    // Simulate Google OAuth
    await simulateApiCall()

    // Redirect to main app
    window.location.href = "index.html"
  } catch (error) {
    hideLoading()
    showNotification("Google sign-up failed. Please try again.", "error")
  }
}

// Forgot password modal
function showForgotPassword() {
  const modal = document.getElementById("forgotModal")
  modal.classList.add("show")
}

function closeForgotPassword() {
  const modal = document.getElementById("forgotModal")
  modal.classList.remove("show")
}

async function sendResetEmail() {
  const email = document.getElementById("resetEmail").value

  if (!email) {
    showNotification("Please enter your email address", "error")
    return
  }

  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
  if (!emailRegex.test(email)) {
    showNotification("Please enter a valid email address", "error")
    return
  }

  try {
    // Simulate API call
    await simulateApiCall()

    showNotification("Password reset link sent to your email", "success")
    closeForgotPassword()
  } catch (error) {
    showNotification("Failed to send reset email. Please try again.", "error")
  }
}

// Utility functions
function showLoading(message = "Loading...") {
  const overlay = document.getElementById("loadingOverlay")
  const text = overlay.querySelector("p")
  text.textContent = message
  overlay.classList.add("show")
}

function hideLoading() {
  const overlay = document.getElementById("loadingOverlay")
  overlay.classList.remove("show")
}

function showNotification(message, type = "info") {
  // Create notification element
  const notification = document.createElement("div")
  notification.className = `notification ${type}`
  notification.innerHTML = `
        <i class="fas ${type === "success" ? "fa-check-circle" : type === "error" ? "fa-exclamation-circle" : "fa-info-circle"}"></i>
        <span>${message}</span>
        <button onclick="this.parentElement.remove()">
            <i class="fas fa-times"></i>
        </button>
    `

  // Add styles
  notification.style.cssText = `
        position: fixed;
        top: 2rem;
        right: 2rem;
        background: ${type === "success" ? "var(--success-color)" : type === "error" ? "var(--error-color)" : "var(--accent-primary)"};
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 12px;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        box-shadow: var(--shadow-lg);
        z-index: 3000;
        animation: slideIn 0.3s ease-out;
        max-width: 400px;
    `

  // Add to page
  document.body.appendChild(notification)

  // Auto remove after 5 seconds
  setTimeout(() => {
    if (notification.parentElement) {
      notification.remove()
    }
  }, 5000)
}

// Simulate API calls
function simulateApiCall() {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      // Simulate 90% success rate
      if (Math.random() > 0.1) {
        resolve()
      } else {
        reject(new Error("API Error"))
      }
    }, 2000)
  })
}

// Close modals when clicking outside
document.addEventListener("click", (e) => {
  const forgotModal = document.getElementById("forgotModal")
  if (e.target === forgotModal) {
    closeForgotPassword()
  }
})

// Keyboard shortcuts
document.addEventListener("keydown", (e) => {
  if (e.key === "Escape") {
    closeForgotPassword()
  }
})

// Add slide-in animation styles
const style = document.createElement("style")
style.textContent = `
    @keyframes slideIn {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    .notification button {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
        padding: 0.25rem;
        border-radius: 4px;
        opacity: 0.8;
        transition: opacity 0.3s ease;
    }
    
    .notification button:hover {
        opacity: 1;
    }
`
document.head.appendChild(style)


    </script>
</body>
</html>
